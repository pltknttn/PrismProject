<UserControl x:Class="PrismDemo.Views.WaitIndicator.IndeterminateCircularProgressView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PrismDemo.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Border BorderThickness="2"  
                BorderBrush="{StaticResource MaterialDesignTextAreaInactiveBorder}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                CornerRadius="90" 
                Opacity="0.5"
                >
            <Border.Effect>
                <!--<DropShadowEffect BlurRadius="45" ShadowDepth="13" Direction="270" 
                                  Color="{StaticResource MaterialDesignShadow}" 
                                  Opacity=".42" RenderingBias="Performance" />-->
                <DropShadowEffect  BlurRadius="8" ShadowDepth="3" Direction="270" 
                                   Color="{StaticResource MaterialDesignShadow}" 
                                   Opacity=".5" RenderingBias="Performance" 
                                   />

            </Border.Effect>
            <ProgressBar x:Name="DeterminateCircularProgress"
              Value="30" Width="55" Height="55"
              IsIndeterminate="True"
              Style="{StaticResource MaterialDesignCircularProgressBar}"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Stretch"
                     />
        </Border>
    </Grid>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard TargetName="DeterminateCircularProgress" TargetProperty="Value" RepeatBehavior="Forever" Duration="0:0:3">
                        <DoubleAnimation From="0" To="100" Duration="0:0:2.5" FillBehavior="HoldEnd">
                            <DoubleAnimation.EasingFunction>
                                <CircleEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard> 
            </EventTrigger.Actions>
        </EventTrigger>
    </UserControl.Triggers>
</UserControl>
