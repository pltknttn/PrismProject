<UserControl x:Class="PrismDemo.Views.WaitIndicator.AnimatedProgressInCardView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PrismDemo.Views.WaitIndicator" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <!--<smtx:XamlDisplay
            UniqueKey="progress_2"
            Grid.Column="1"
            Grid.Row="0"
            Grid.RowSpan="2"
            Margin="24">
            <ProgressBar
                Orientation="Vertical"
                Height="10"
                IsIndeterminate="True"/>
        </smtx:XamlDisplay>-->

        <smtx:XamlDisplay
                UniqueKey="progress_11"
                Grid.Row="5"
                Grid.Column="0"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Margin="12">
            
            <materialDesign:Card
                    UniformCornerRadius="10"
                    Padding="5"
                >
                <ProgressBar
                        Style="{StaticResource MaterialDesignCircularProgressBar}" 
                        Value="50"
                        IsIndeterminate="True"/>
            </materialDesign:Card>
        </smtx:XamlDisplay>
        
        <smtx:XamlDisplay> 
         
            <materialDesign:Card
                    UniformCornerRadius="14" 
                    RenderTransformOrigin=".5,.5"
                    Padding="4">
            <ProgressBar
                        x:Name="AnimatedProgressInCard"
                        Style="{StaticResource MaterialDesignCircularProgressBar}" Height="20" Margin="0,211,0,0" VerticalAlignment="Top"/>
            <materialDesign:Card.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="ScaleTransform" ScaleX="0" ScaleY="0"/>
                </TransformGroup>
            </materialDesign:Card.RenderTransform>

            <materialDesign:Card.Style>
                <Style TargetType="materialDesign:Card" BasedOn="{StaticResource {x:Type materialDesign:Card}}">
                    <Style.Resources>
                        <Storyboard x:Key="FadeIn" FillBehavior="HoldEnd">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame Value="0"/>
                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.8">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame Value="0"/>
                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.8">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="FadeOut">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame Value="1"/>
                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.8">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame Value="1"/>
                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.8">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </Style.Resources>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=AnimatedProgressInCard, Path=Value}" Value="20">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="FadeOut"/>
                                <BeginStoryboard Storyboard="{StaticResource FadeIn}" Name="FadeIn"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=AnimatedProgressInCard, Path=Value}" Value="100">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="FadeIn"/>
                                <BeginStoryboard Storyboard="{StaticResource FadeOut}" Name="FadeOut"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:Card.Style>
        </materialDesign:Card>

        </smtx:XamlDisplay>
    </Grid>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <EventTrigger.Actions> 
                <BeginStoryboard>
                    <Storyboard TargetName="AnimatedProgressInCard" RepeatBehavior="Forever">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Value">
                            <DiscreteDoubleKeyFrame Value="0" KeyTime="0"/>
                            <DiscreteDoubleKeyFrame Value="1" KeyTime="0:0:0.1"/>
                            <!-- we have used a 20% startup to fade in on the actual control -->
                            <DiscreteDoubleKeyFrame Value="20" KeyTime="0:0:1"/>
                            <!-- pretend we are indeterminate for 4 seconds -->
                            <DiscreteDoubleKeyFrame Value="20" KeyTime="0:0:4"/>
                            <!-- now we become determinate and complete to 100% -->
                            <SplineDoubleKeyFrame Value="100" KeyTime="0:0:8"/>
                            <SplineDoubleKeyFrame Value="100" KeyTime="0:0:9"/>
                        </DoubleAnimationUsingKeyFrames>

                        <BooleanAnimationUsingKeyFrames  Storyboard.TargetProperty="IsIndeterminate" Duration="0:0:10">
                            <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0.1"/>
                            <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:3.9"/>
                            <!-- now we become determinate and complete to 100% -->
                            <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:4"/>
                        </BooleanAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
    </UserControl.Triggers>
</UserControl>
